% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rport.R
\name{register.connection.settings}
\alias{register.connection.settings}
\title{Define DB connection settings at run time.}
\usage{
register.connection.settings(db.config, strict = TRUE)
}
\arguments{
\item{db.config}{is a list of format:
  list(
    my-custom-con1=list(
      database='db1',
      username='analytics',
      password='',
      host='db-1',
      port=5432,
      application_name='rport'
    ),
    my-custom-con2=list(
      database='db2',
      username='analytics',
      password='',
      host='db-2',
      port=5432,
      application_name='rport'
    )
 )

Note, that if a list with multiple definitions for the same connection name
is given, there'll be an error.}

\item{strict}{default TRUE. If strict is TRUE, no connection definitions
cannot be overwritten and if you try to add a connection name that already
exists - either from an earlier `register.connection.settings()` call or from
a database.yml definition, there'll be an error. If strict is FALSE,
connections can be overwritten.}
}
\description{
This function lets users define DB connection settings from sources other
than the database.yml config. This is useful for DB setups where a master
node maintains a dynamic list of DB nodes. This function only lets you define
the connection settings. The actual connection will be open by a subsequent
`db('my-custom-con1', 'select 1')` call. This function doesn't check or validate the input, the caller is responsible
for making sure that the list has the correct format, otherwise the
connection (i.e. the `db` call) would fail.
}
\seealso{
reload.db.config, list.connections
}
