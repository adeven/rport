#!/usr/bin/Rscript

log.file <- file.path('log', '<%= project.name.fs %>.log')

sink(file(log.file, open='a'), type='message')
sink(log.file, type='output')

tryCatch({
  library(rport)

  # After setting up your database.yml, bootstrap your app with database access:
  # rport(Sys.getenv('RPORT_ENV', 'development'))

  # add `opts=FALSE` to skip loading opts for this project or `shared=FALSE` to
  # not load shared R code from lib/
  rport.bootstrap('executable', project='<%= project.name.fs %>')

  print(<%= project.name.r %>.main())

  # For this executable you can also:
  #
  # bootstrap mailing using `rport.bootstrap('mailing')`
  # bootstrap parallel using `rport.bootstrap('parallel')`
  #
},

finally={
  rport.runtime.exit()
  sink()
  sink(type='message')
})
